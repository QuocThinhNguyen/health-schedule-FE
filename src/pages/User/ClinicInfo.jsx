import React, { useState, useEffect, useRef } from 'react';
import { MapPin, Clock, ChevronRight, Mail, Info, Phone, Search, X } from 'lucide-react';
import { axiosInstance } from '~/api/apiRequest';
import { NavLink, useNavigate, useLocation } from 'react-router-dom';
import parse from 'html-react-parser';
import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';
import 'react-tabs/style/react-tabs.css';

function ClinicInfo() {
    const [clinicData, setClinicData] = useState([]); // Tr·∫°ng th√°i l∆∞u d·ªØ li·ªáu t·ª´ API
    const { state } = useLocation();

    const navigate = useNavigate();
    const [activeTab, setActiveTab] = useState('info');
    const [showDepartments, setShowDepartments] = useState(false);
    const [selectedDepartment, setSelectedDepartment] = useState(null);
    const dropdownRef = useRef(null);
    const inputRef = useRef(null);
    const [specialty, setSpecialty] = useState([]);

    console.log('STATE', state);
    console.log('clinicData:', clinicData);

    console.log('tab', activeTab);
    useEffect(() => {
        const fetchClinicInfo = async () => {
            try {
                const response = await axiosInstance.get(`/clinic/${state.clinicId}`);
                console.log('response:', response);
                if (response.status === 200) {
                    setClinicData(response.data);
                }
            } catch (error) {
                console.error('Failed to fetch clinic:', error.message);
            }
        };

        fetchClinicInfo();
    }, []);

    const handleGetSpecialty = (clinicId, clinicName) => {
        console.log('clinicId:', clinicId);
        navigate(`/benh-vien/chuyen-khoa`, {
            state: { clinicId: clinicId, clinicName: clinicName },
        });
    };

    const handleTabClick = (index) => {
        setActiveTab(index); // C·∫≠p nh·∫≠t tab ƒë∆∞·ª£c ch·ªçn
    };

    const tabs = [
        { id: 'info', label: 'Th√¥ng tin chung' },
        { id: 'doctor', label: 'B√°c sƒ©', count: 12 },
        { id: 'review', label: 'ƒê√°nh gi√°', count: 50 },
    ];

    // Handle click outside to close dropdown
    useEffect(() => {
        const handleClickOutside = (event) => {
            if (
                dropdownRef.current &&
                !dropdownRef.current.contains(event.target) &&
                !inputRef.current.contains(event.target)
            ) {
                setShowDepartments(false);
            }
        };

        document.addEventListener('mousedown', handleClickOutside);
        return () => document.removeEventListener('mousedown', handleClickOutside);
    }, []);

    const handleDepartmentSelect = (department) => {
        console.log('department:', department);
        setSelectedDepartment(department);
        setShowDepartments(false);
    };

    const handleClearSelection = (e) => {
        e.stopPropagation(); // Prevent dropdown from opening
        setSelectedDepartment(null);
    };

    const departments = [
        { id: 1, name: 'Tai - M≈©i - H·ªçng', icon: 'üëÇ' },
        { id: 2, name: 'Ngo·∫°i t·ªïng qu√°t', icon: 'üè•' },
        { id: 3, name: 'Ngo·∫°i th·∫ßn kinh', icon: 'üß†' },
        { id: 4, name: 'N·ªôi t·ªïng qu√°t', icon: 'üë®‚Äç‚öïÔ∏è' },
        { id: 5, name: 'C∆° - X∆∞∆°ng - Kh·ªõp', icon: 'ü¶¥' },
        { id: 6, name: 'Ph·∫´u thu·∫≠t th·∫©m m·ªπ', icon: '‚ú®' },
        { id: 7, name: 'Tim m·∫°ch', icon: '‚ù§Ô∏è' },
        { id: 8, name: 'Khoa th·∫•p kh·ªõp', icon: 'ü¶ø' },
        { id: 9, name: 'Ch·ªânh h√¨nh', icon: 'ü¶æ' },
    ];

    useEffect(() => {
        const fetchSpecialty = async () => {
            try {
                const response = await axiosInstance.get(`/specialty/clinicId/${state.clinicId}`);
                console.log('response specialty:', response);
                if (response.status === 200) {
                    setSpecialty(response.data);
                }
            } catch (error) {
                console.error('Failed to fetch specialty:', error.message);
            }
        };
        fetchSpecialty();
    }, []);

    return (
        <div className="min-h-screen bg-white">
            <div className="w-full bg-blue-50">
                <div className="max-w-6xl py-2">
                    <div className="flex items-center gap-2 text-sm ml-12">
                        <NavLink
                            to="/"
                            onClick={(e) => {
                                if (window.location.pathname === '/') {
                                    e.preventDefault();
                                    window.scrollTo(0, 0);
                                }
                            }}
                            className="flex-shrink-0 flex items-center font-semibold"
                        >
                            Trang ch·ªß
                        </NavLink>
                        <ChevronRight className="w-4 h-4 text-gray-400" />
                        <div className="text-blue-600 cursor-pointer font-semibold">{clinicData.name}</div>
                    </div>
                </div>
            </div>
            {/* Header */}
            <div className="bg-white h-[300px] relative">
                {/* <img
                    src="https://cdn.bookingcare.vn/fo/2021/09/14/095119-benh-vien-cho-ray-h1.jpg"
                    alt="Clinic Banner"
                    className="mx-auto w-full max-w-7xl h-[300px] z-0 object-cover"
                /> */}

                <div className="relative rounded-xl overflow-hidden mt-5 flex justify-center items-center border-none outline-none">
                    <div
                        className="relative w-full max-w-6xl h-96 rounded-lg overflow-hidden bg-cover bg-center"
                        style={{
                            backgroundImage: `url('https://cdn.bookingcare.vn/fo/2021/09/14/095119-benh-vien-cho-ray-h1.jpg')`,
                        }}
                    />
                </div>

                {/* <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 h-80 z-10 relative"></div> */}
                <div className="max-w-6xl mx-auto h-48 z-10 relative opacity-100">
                    <div className="flex items-center justify-between mt-[-40px]">
                        <div className="flex items-center gap-5">
                            <img
                                src={`http://localhost:${import.meta.env.VITE_BE_PORT}/uploads/${clinicData.image}`}
                                alt="logo clinic"
                                className=" h-36 w-36 rounded-full border-4 border-white shadow-lg"
                            />

                            <div className="mt-8">
                                <h1 className="text-[22px] font-bold">{clinicData.name}</h1>
                                <div className="flex items-center mt-2">
                                    <MapPin className="mr-2" size={15} />
                                    <p className="text-[14px] font-semibold text-gray-500">{clinicData.address}</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div className="bg-blue-50 mt-52 h-2"></div>

            <div className="flex flex-col lg:flex-row gap-8 max-w-6xl mt-2 mx-auto">
                <div className="flex-1">
                    {/* <Tabs selectedIndex={activeTab} onSelect={(index) => setActiveTab(index)}>
                        <TabList className="flex border-b mb-4 text-base text-[#737373] font-semibold">
                            <Tab
                                className={`px-4 py-2 cursor-pointer border-b-2 focus:outline-none ${
                                    activeTab === 0
                                        ? 'text-blue-600 border-blue-600'
                                        : 'border-transparent hover:text-blue-600 hover:border-blue-600'
                                }`}
                            >
                                Th√¥ng tin chung
                            </Tab>
                            <Tab
                                className={`px-4 py-2 cursor-pointer border-b-2 focus:outline-none ${
                                    activeTab === 1
                                        ? 'text-blue-600 border-blue-600'
                                        : 'border-transparent hover:text-blue-600 hover:border-blue-600'
                                }`}
                            >
                                B√°c sƒ©
                            </Tab>
                            <Tab
                                className={`px-4 py-2 cursor-pointer border-b-2 focus:outline-none ${
                                    activeTab === 2
                                        ? 'text-blue-600 border-blue-600'
                                        : 'border-transparent hover:text-blue-600 hover:border-blue-600'
                                }`}
                            >
                                ƒê√°nh gi√°
                            </Tab>
                        </TabList>
                    </Tabs> */}
                    <div className="border-b-2 mb-6">
                        <div className="flex">
                            {tabs.map((tab) => (
                                <button
                                    key={tab.id}
                                    onClick={() => setActiveTab(tab.id)}
                                    className={`text-base text-[#737373] font-semibold px-4 py-2 relative ${
                                        activeTab === tab.id ? 'text-blue-500' : 'text-gray-600 hover:text-blue-500'
                                    }`}
                                >
                                    {tab.label}
                                    {tab.count && ` (${tab.count})`}
                                    {activeTab === tab.id && (
                                        <div className="absolute bottom-0 left-0 right-0 h-0.5 bg-blue-500" />
                                    )}
                                </button>
                            ))}
                        </div>
                    </div>

                    {/* Content */}
                    {activeTab === 'info' && (
                        <div className="">
                            <main className="max-w-6xl mx-auto">
                                {/* Information Sections */}
                                <div className="space-y-6">
                                    <div className="bg-yellow-50 border-l-4 border-yellow-400 p-4">
                                        <p className="text-base">
                                            EasyMed l√† N·ªÅn t·∫£ng Y t·∫ø chƒÉm s√≥c s·ª©c kh·ªèe to√†n di·ªán h√†ng ƒë·∫ßu Vi·ªát Nam k·∫øt
                                            n·ªëi ng∆∞·ªùi d√πng v·ªõi tr√™n 200 b·ªánh vi·ªán - ph√≤ng kh√°m uy t√≠n, h∆°n 1,500 b√°c sƒ©
                                            chuy√™n khoa gi·ªèi v√† h√†ng ngh√¨n d·ªãch v·ª•, s·∫£n ph·∫©m y t·∫ø ch·∫•t l∆∞·ª£ng cao.
                                        </p>
                                    </div>

                                    <div className="bg-blue-50 border-l-4 border-blue-400 p-4">
                                        <p className="text-base mb-4">
                                            T·ª´ nay, ng∆∞·ªùi b·ªánh c√≥ th·ªÉ ƒë·∫∑t l·ªãch t·∫°i Khu kh√°m b·ªánh theo y√™u c·∫ßu th√¥ng qua
                                            h·ªá th·ªëng ƒë·∫∑t kh√°m EasyMed.
                                        </p>
                                        <ul className="space-y-2 text-base">
                                            <li className="flex items-center gap-2">
                                                <Info className="h-4 w-4 text-blue-500" />
                                                ƒê∆∞·ª£c l·ª±a ch·ªçn c√°c gi√°o s∆∞, ti·∫øn sƒ©, b√°c sƒ© chuy√™n khoa gi√†u kinh nghi·ªám
                                            </li>
                                            <li className="flex items-center gap-2">
                                                <Info className="h-4 w-4 text-blue-500" />
                                                H·ªó tr·ª£ ƒë·∫∑t kh√°m tr·ª±c tuy·∫øn tr∆∞·ªõc khi ƒëi kh√°m (mi·ªÖn ph√≠ ƒë·∫∑t l·ªãch)
                                            </li>
                                            <li className="flex items-center gap-2">
                                                <Info className="h-4 w-4 text-blue-500" />
                                                Gi·∫£m th·ªùi gian ch·ªù ƒë·ª£i khi l√†m th·ªß t·ª•c kh√°m v√† ∆∞u ti√™n kh√°m tr∆∞·ªõc
                                            </li>
                                            <li className="flex items-center gap-2">
                                                <Info className="h-4 w-4 text-blue-500" />
                                                Nh·∫≠n ƒë∆∞·ª£c h∆∞·ªõng d·∫´n chi ti·∫øt sau khi ƒë·∫∑t l·ªãch
                                            </li>
                                        </ul>
                                    </div>

                                    <div className="bg-white p-6 rounded-lg text-xl">
                                        <h3 className="text-base font-semibold mb-4">GI·ªöI THI·ªÜU</h3>
                                        <div className="space-y-4 ">
                                            <div>
                                                <h4 className="font-medium mb-2 flex items-center text-base">
                                                    <MapPin className="mr-2" size={15} />
                                                    ƒê·ªãa ch·ªâ:
                                                </h4>
                                                <p className="text-gray-600 text-base ">{clinicData.address}</p>
                                            </div>
                                            <div>
                                                <h4 className="font-medium mb-2 flex items-center text-base">
                                                    <Clock className="mr-2" size={15} />
                                                    Th·ªùi gian l√†m vi·ªác:
                                                </h4>
                                                <p className="text-gray-600 text-base">Th·ª© 2 ƒë·∫øn th·ª© 7</p>
                                            </div>
                                            <div>
                                                <h4 className="font-medium mb-2 flex items-center text-base">
                                                    <Phone className="mr-2" size={15} />
                                                    H·ªó tr·ª£ ƒë·∫∑t kh√°m:
                                                </h4>
                                                <p className="text-gray-600 text-base">{clinicData.phoneNumber}</p>
                                            </div>
                                            <div>
                                                <h4 className="font-medium mb-2 flex items-center text-base">
                                                    <Mail className="mr-2" size={15} />
                                                    Email li√™n h·ªá:
                                                </h4>
                                                <p className="text-gray-600 text-base">{clinicData.email}</p>
                                            </div>

                                            <div className="doctor-description text-base">
                                                {clinicData.description
                                                    ? parse(clinicData.description)
                                                    : 'M√¥ t·∫£ kh√¥ng c√≥ s·∫µn'}
                                            </div>
                                        </div>
                                    </div>
                                    {/* <div className="max-w-6xl mx-8 py-2">
                        <button
                            className="text-xl w-full bg-blue-500 text-white py-2 rounded-lg font-medium border hover:border-blue-500 hover:text-blue-500 hover:bg-blue-50 transition-colors fixed bottom-0 left-0 right-0"
                            onClick={() => handleGetSpecialty(clinicData.clinicId, clinicData.name)}
                        >
                            Ch·ªçn ƒê·∫∑t Kh√°m
                        </button>
                    </div> */}
                                </div>
                            </main>
                        </div>
                    )}
                </div>

                <div className="w-96 shrink-0 mt-4">
                    <div className="bg-gray-50 rounded-lg p-4">
                        <div className="text-lg font-bold mb-2">ƒê·∫∑t l·ªãch ngay</div>
                        <div className="text-sm text-gray-600 mb-6">
                            L·ª±a ch·ªçn b√°c sƒ© ph√π h·ª£p, d·ªãch v·ª• y t·∫ø c·∫ßn kh√°m v√† ti·∫øn h√†nh ƒë·∫∑t l·ªãch ngay.
                        </div>

                        <div>
                            <div className="space-y-2">
                                <label className="text-sm font-medium">B·ªánh vi·ªán</label>
                                <div className="p-3 rounded-lg border bg-gray-50 cursor-not-allowed">
                                    <div className="flex items-center gap-2">
                                        <img
                                            src={`http://localhost:${import.meta.env.VITE_BE_PORT}/uploads/${
                                                clinicData.image
                                            }`}
                                            alt="logo clinic"
                                            className=" h-8 w-8 rounded-full border-4 border-white"
                                        />
                                        <div className="text-base font-semibold">{clinicData.name}</div>
                                    </div>
                                </div>
                            </div>

                            {/* <div className="space-y-2">
                                <label className="text-sm font-medium">Chuy√™n khoa</label>
                                <div
                                    className="p-3 rounded-lg border bg-white cursor-pointer"
                                    onClick={() => setShowDepartments(true)}
                                >
                                    <div className="flex items-center gap-2 pl-2">
                                        <div className="flex items-center gap-2">
                                            <Search className=" w-5 h-5 text-gray-400" />
                                            <input
                                                type="text"
                                                placeholder="T√¨m chuy√™n khoa"
                                                className="text-base focus-outline-none"
                                                value={selectedDepartment?.name || ''}
                                                readOnly
                                            />
                                        </div>
                                    </div>
                                </div>
                            </div> */}

                            <div className="space-y-2 mt-3">
                                <label className="block text-sm font-medium">Chuy√™n khoa</label>
                                <div
                                    ref={inputRef}
                                    className="relative cursor-pointer"
                                    onClick={() => setShowDepartments(true)}
                                >
                                    <div className="absolute left-4 top-1/2 -translate-y-1/2 flex items-center gap-2">
                                        {!selectedDepartment && <Search className="w-5 h-5 text-gray-400" />}
                                        {selectedDepartment && (
                                            <img
                                                src={`http://localhost:${import.meta.env.VITE_BE_PORT}/uploads/${
                                                    selectedDepartment.image
                                                }`}
                                                alt="logo clinic"
                                                className="h-8 w-8 rounded-full border-4 border-white"
                                            />
                                        )}
                                    </div>

                                    <input
                                        type="text"
                                        placeholder="T√¨m chuy√™n khoa"
                                        className={`w-full py-2.5 text-base font-semibold bg-white border rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500 cursor-pointer ${
                                            selectedDepartment ? 'pl-14' : 'pl-12'
                                        }`}
                                        value={selectedDepartment?.name || ''}
                                        readOnly
                                    />

                                    {selectedDepartment && (
                                        <button
                                            onClick={handleClearSelection}
                                            className="absolute right-3 top-1/2 -translate-y-1/2 p-0.5 hover:bg-gray-100 rounded"
                                        >
                                            <X className="w-4 h-4 text-gray-400" />
                                        </button>
                                    )}
                                </div>

                                {/* Departments Dropdown */}
                                {showDepartments && (
                                    <div
                                        ref={dropdownRef}
                                        className="absolute z-10 mt-1 w-[355px] bg-white border rounded-lg shadow-lg max-h-80 overflow-y-auto"
                                    >
                                        {specialty.map((dept) => (
                                            <button
                                                key={dept.specialtyId}
                                                className="w-full p-2 text-left hover:bg-gray-50 flex items-center gap-2"
                                                onClick={() => handleDepartmentSelect(dept)}
                                            >
                                                <img
                                                    src={`http://localhost:${import.meta.env.VITE_BE_PORT}/uploads/${
                                                        dept.image
                                                    }`}
                                                    alt="logo clinic"
                                                    className="h-8 w-8 rounded-full border-4 border-white"
                                                />
                                                <span className="text-base font-semibold">{dept.name}</span>
                                            </button>
                                        ))}
                                    </div>
                                )}
                            </div>

                            <div className="space-y-2">
                                <label className="text-sm font-medium">B√°c sƒ©</label>
                                <div className="p-3 rounded-lg border bg-white cursor-pointer">
                                    <div className="flex items-center gap-2 pl-2">
                                        <div className="flex items-center gap-2">
                                            <Search className=" w-5 h-5 text-gray-400" />
                                            <input type="text" placeholder="T√¨m b√°c sƒ©" className="text-base" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
}

export default ClinicInfo;
